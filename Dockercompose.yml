version: '3.8'

services:
  # Node.js MCP Server Service
  mcp-server:
    build:
      context: ./mcp-server
      dockerfile: Dockerfile
    container_name: mcp-server
    ports:
      - "3001:3001"
    environment:
      - PORT=3001
      - NODE_ENV=production
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # FastAPI Agent Service
  fastapi-agent:
    build:
      context: ./fastapi-agent
      dockerfile: Dockerfile
    container_name: fastapi-agent
    ports:
      - "8000:8000"
    environment:
      - SERVER_URL=http://mcp-server:3001/mcp
    depends_on:
      mcp-server:
        condition: service_healthy
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Slack Bot Service
  slack-bot:
    build:
      context: ./slack-bot
      dockerfile: Dockerfile
    container_name: slack-bot
    ports:
      - "3002:3002"
    environment:
      - MCP_URL=http://fastapi-agent:8000/agent
      - FLASK_ENV=production
    depends_on:
      fastapi-agent:
        condition: service_healthy
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3002/health"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  app-network:
    driver: bridge
    name: meeting-room-network